buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.2.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.2.1'
        classpath 'com.netflix.nebula:gradle-dependency-lock-plugin:7.0.1'
        classpath 'com.palantir.baseline:gradle-baseline-java:3.97.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:1.30.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.3'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.3.0'
        classpath 'me.champeau.jmh:jmh-gradle-plugin:0.6.5'
    }
}
allprojects {
    apply plugin: 'com.palantir.java-format'
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'java-library'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'org.inferred.processors'
apply plugin: 'me.champeau.jmh'

group 'com.palantir.ri'
version gitVersion()

apply plugin: 'com.palantir.external-publish-jar'

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-annotations'

    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'org.junit.jupiter:junit-jupiter'

    jmh 'org.openjdk.jmh:jmh-core'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess'

}

configurations.testCompileClasspath {
    exclude module: 'junit'
}

jmh {
    profilers = ['gc']
}

tasks.jmhCompileGeneratedClasses {
    options.annotationProcessorPath = configurations.errorprone
    options.errorprone.enabled = false
}
